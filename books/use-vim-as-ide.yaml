# yangyangwithgnu/use_vim_as_ide配置
---
# 技术教程名称应总是唯一的
name: 像IDE一样实验Vim      
# 技术教程 URL 链接定位字符串，通过 "-" 符号链接单词
slug: use-vim-as-ide
topic: Linux运维
# 标签是一个有序列表，技术教程在页面显示时会使用第一个标签的 icon
tags:
  - Linux
# 技术教程所在的 git 仓库地址，仓库地址由 github 用户名和仓库名组成
repository: yangyangwithgnu/use_vim_as_ide
# 技术教程所在的 git 仓库地址目录
# shiyanlou/library 下的技术教程需要指定教程章节内容所在的目录名称
# 而如果作者的技术教程拥有自己的仓库，则填写 "/" 即可
repository_dir: /
# 作者信息
# 如果同一作者拥有多个技术教程，所有教程的作者配置信息应一致
author:
  name: yangyangwithgnu
  email: yangyangwithgnu@yeah.net 
  # github 主页地址
  github: github.com/yangyangwithgnu
  blog: yangyangwithgnu.github.io
# 描述信息
description: |
  开始前，我假设你：0）具备基本的 vim 操作能力，清楚如何打开/编辑/保存文档、命令与插入模式间切换；1）希望将 vim 打造成 C/C++ 语言的 IDE，而非其他语言。
  我是个目标驱动的信奉者，本文内容，我会先给出优秀 C/C++ IDE 应具备哪些功能，再去探索如何通过 vim 的操作或插件来达到目标。
# 配置教程是否该领域官方教程
official: false
# 教程版本号
version: 1.1
